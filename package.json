{
  "name": "pix",
  "version": "4.0.0",
  "description": "Plateforme d'évaluation et de certification des compétences numériques des citoyens francophones.",
  "author": "Team PIX",
  "license": "AGPL-3.0",
  "homepage": "https://github.com/sgmap/pix#readme",
  "bugs": {
    "url": "https://github.com/sgmap/pix/issues"
  },
  "main": "index.js",
  "devDependencies": {
    "codeclimate-test-reporter": "^0.4.0",
    "coveralls": "^2.11.15",
    "lcov-result-merger": "^1.2.0",
    "npm-run-all": "^3.1.1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sgmap/pix.git"
  },
  "scripts": {
    "clean:api": "cd api && npm run clean",
    "clean:live": "cd live && npm run clean",
    "clean:coverage": "rm -rf coverage api/coverage live/coverage",
    "clean": "node_modules/.bin/run-p clean:api clean:live clean:coverage",
    "install:api": "cd api && npm install",
    "install:live": "cd live && npm run install:all",
    "install:all": "npm install && node_modules/.bin/run-p install:api install:live",
    "start:api": "cd api && npm run start:watch",
    "start:live": "cd live && ember serve --proxy",
    "start": "run-p start:api start:live",
    "test:api": "cd api && npm run lint && npm test",
    "test:live": "cd live && npm test",
    "test": "npm run test:api && npm run test:live",
    "coverage:clean": "rm -rf ./coverage",
    "coverage:api": "cd api && npm run lint && npm run coverage",
    "coverage:live": "cd live && npm run coverage",
    "coverage:merge": "./node_modules/.bin/lcov-result-merger 'coverage/*_lcov.info' 'coverage/lcov.info'",
    "coverage:coveralls": "cat coverage/lcov.info | COVERALLS_SERVICE_NAME=circleci COVERALLS_REPO_TOKEN=M9ACRID08PaZPH1LoaIkNpek1S8YEyAvA ./node_modules/.bin/coveralls",
    "coverage:codeclimate": "cat coverage/lcov.info | CODECLIMATE_REPO_TOKEN=bd614b65638c2cdf55c040a201c45996b8838195786bc522453ee241c9fb2cae ./node_modules/.bin/codeclimate-test-reporter",
    "coverage": "npm run coverage:clean && npm run coverage:api && npm run coverage:live && npm run coverage:merge && npm run coverage:coveralls && npm run coverage:codeclimate",
    "deploy:integration:api": "cd api && npm run deploy:integration",
    "deploy:integration:live": "cd live && npm run deploy:integration && ./live/scripts/signal_deploy_to_pr.sh",
    "deploy:integration": "npm run deploy:integration:api && npm run deploy:integration:live",
    "deploy:staging:api": "cd api && npm run deploy:staging",
    "deploy:staging:live": "cd live && npm run deploy:staging",
    "deploy:staging": "npm run deploy:staging:api && npm run deploy:staging:live",
    "deploy:production:api": "cd api && npm run deploy:production",
    "deploy:production:live": "cd live && npm run deploy:production",
    "deploy:production": "npm run deploy:production:api && npm run deploy:production:live",
    "release:prepare": "./scripts/release/prepare.sh",
    "release:perform": "./scripts/release/perform.sh",
    "release:publish": "./scripts/release/publish.sh"
  }
}
