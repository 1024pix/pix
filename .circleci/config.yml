# .circleci/config.yml
#
# This file configures the CircleCI 2.0 build.
#
# Documentation:
# - Overview: https://circleci.com/docs/2.0/workflows/
# - Caching: https://circleci.com/docs/2.0/caching/
#
# Things to know:
# - every job is a container
# - the file `.circle-cache-key` is used to have a common key between different containers of same build
# - we need cache, everywhere for everything
# - cache is immutable. Sometimes we need to flush the cache, but we can't. That's why there is this
# `v1-` at the beginning. Increment it to `v1-` when you need to change the cache content
#
# Cached entries (lifetime = months):
# - `v1-pix-{{ checksum ".circle-cache-key" }}`                  => the source code
# - `v1-server-dependencies-{{ checksum "package.json" }}` => `pix/api/node_modules` directory
# - `v1-client-dependencies-{{ checksum "package.json" }}` => `pix/mon-pix/{node_modules, bower_components}` directories
#
# Workspace entries (lifetime = workflow):
# - `~/pix/mon-pix/dist`                                      => `pix/mon-pix/dist` directory

common_properties: &common_properties
  docker:
    - image: circleci/node:8
  working_directory: ~/pix

# Properties shared by all server-side jobs
server_properties: &server_properties
  docker:
    - image: circleci/node:8
  working_directory: ~/pix/api

# Properties shared by all client-side jobs
client_properties: &client_properties
  docker:
    - image: circleci/node:8-browsers
  working_directory: ~/pix/mon-pix

version: 2.0

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      # Common
      - checkout_code:
          filters:
            branches:
              ignore:
                - master
                - math
                - preview
                - gh-pages
                - /release-.*/

      # Server side
      - install_server_dependencies:
          requires:
            - checkout_code
      - test_server:
          requires:
            - install_server_dependencies
      # Client side
      - install_client_dependencies:
          requires:
            - checkout_code
      - test_client_1:
          requires:
            - install_client_dependencies
      - test_client_2:
          requires:
            - install_client_dependencies
      - test_client_3:
          requires:
            - install_client_dependencies

      - signal_ci_ok:
          requires:
            - test_server
            - test_client_1
            - test_client_2
            - test_client_3
          filters:
            branches:
              ignore:
                - dev


jobs:
  # Common
  checkout_code:
    <<: *common_properties
    steps:
      - checkout
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - save_cache:
          key: v5-pix-{{ checksum ".circle-cache-key" }}
          paths:
            - ~/pix

  # Server side
  install_server_dependencies:
    <<: *server_properties
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - restore_cache:
          keys:
            - v5-server-dependencies-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v5-server-dependencies-{{ checksum "package.json" }}
          paths:
            - ~/pix/api/node_modules
            - ~/pix/.npm
  test_server:
    docker:
      - image: circleci/node:8
      - image: postgres:10-alpine
        environment:
          POSTGRES_USER: circleci
    working_directory: ~/pix/api
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - restore_cache:
          keys:
            - v5-server-dependencies-{{ checksum "package.json" }}
      - run:
          command: |
            npm run lint
            npm test
          environment:
            DATABASE_URL: "postgres://circleci@localhost:5432/circleci"

  # Client side
  install_client_dependencies:
    <<: *client_properties
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - restore_cache:
          keys:
            - v5-client-dependencies-{{ checksum ".circle-cache-key" }}
            #- v5-client-dependencies-{{ checksum "package.json" }} # FIXME restore shared cache between builds
      - run: npm install
      - run: |
          if [ "${CIRCLE_BRANCH}" == "dev" ]; then
            npx ember build --environment staging
          else
            npx ember build --environment integration
          fi
      - persist_to_workspace:
          root: ~/pix/mon-pix
          paths:
            - dist
      - save_cache:
          key: v5-client-dependencies-{{ checksum ".circle-cache-key" }}
          paths:
            - ~/pix/mon-pix/node_modules
            - ~/.npm

  test_client_1:
    <<: *client_properties
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - restore_cache:
          keys:
            - v5-client-dependencies-{{ checksum ".circle-cache-key" }}
      - attach_workspace:
          at: ~/pix/mon-pix
      - run: npx ember exam --path dist --split=3 --partition=1 --reporter dot

  test_client_2:
    <<: *client_properties
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - restore_cache:
          keys:
            - v5-client-dependencies-{{ checksum ".circle-cache-key" }}
      - attach_workspace:
          at: ~/pix/mon-pix
      - run: npx ember exam --path dist --split=3 --partition=2 --reporter dot

  test_client_3:
    <<: *client_properties
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - restore_cache:
          keys:
            - v5-client-dependencies-{{ checksum ".circle-cache-key" }}
      - attach_workspace:
          at: ~/pix/mon-pix
      - run: npx ember exam --path dist --split=3 --partition=3 --reporter dot

  signal_ci_ok:
    <<: *common_properties
    steps:
      - run: echo "${CIRCLE_BRANCH}_${CIRCLE_SHA1}" > .circle-cache-key
      - restore_cache:
          keys:
            - v5-pix-{{ checksum ".circle-cache-key" }}
      - run: sudo apt-get install -y jq
      - run: ~/pix/mon-pix/scripts/jira/comment_with_review_app_url.sh
      - run: ~/pix/mon-pix/scripts/signal_deploy_to_pr.sh
