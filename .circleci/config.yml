# .circleci/config.yml
#
# This file configures the CircleCI 2.0 build.
#
# Documentation:
# - Overview: https://circleci.com/docs/2.0/workflows/
# - Caching: https://circleci.com/docs/2.0/caching/
#
# Things to know:
# - every job is a container
# - we need cache, everywhere for everything
# - cache is immutable. Sometimes we need to flush the cache, but we can't. That's why there is this
# `v1-` at the beginning. Increment it to `v1-` when you need to change the cache content
#
# Cached entries (lifetime = months):
# - `v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}`       => the source code and dependencies
#
# Workspace entries (lifetime = workflow):
# - `~/pix/mon-pix/dist`                                 => `pix/mon-pix/dist` directory

common_properties: &common_properties
  docker:
    - image: circleci/node:8.11
  working_directory: ~/pix

# Properties shared by all api-side jobs
api_properties: &api_properties
  docker:
    - image: circleci/node:8.11
  working_directory: ~/pix/api

# Properties shared by all mon_pix-side jobs
mon_pix_properties: &mon_pix_properties
  docker:
    - image: circleci/node:8.11-browsers
  working_directory: ~/pix/mon-pix

# Properties shared by all orga-side jobs
orga_properties: &orga_properties
  docker:
    - image: circleci/node:8.11-browsers
  working_directory: ~/pix/orga

# Properties shared by all certif-side jobs
certif_properties: &certif_properties
  docker:
    - image: circleci/node:8.11-browsers
  working_directory: ~/pix/certif

version: 2.0

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      # Common
      - checkout_and_install:
          filters:
            branches:
              ignore:
                - master
                - math
                - preview
                - gh-pages
                - /release-.*/

      # api side
      - api_build_and_test:
          requires:
            - checkout_and_install

      # mon_pix side
      - mon_pix_build:
          requires:
            - checkout_and_install
      - mon_pix_test_1:
          requires:
            - mon_pix_build
      - mon_pix_test_2:
          requires:
            - mon_pix_build
      - mon_pix_test_3:
          requires:
            - mon_pix_build

      # orga side
      - orga_build_and_test:
          requires:
            - checkout_and_install

      # certif side
      - certif_build_and_test:
          requires:
            - checkout_and_install

      # common ci notification
      - signal_ci_ok:
          requires:
            - api_build_and_test
            - mon_pix_test_1
            - mon_pix_test_2
            - mon_pix_test_3
            - orga_build_and_test
            - certif_build_and_test
          filters:
            branches:
              ignore:
                - dev

jobs:
  # Common
  checkout_and_install:
    <<: *common_properties
    steps:
      - checkout
      - run: npm install # triggers npm install for subdirectories
      - run: rm -rf .git/ # do not cache .git
      - save_cache:
          key: v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - ~/pix
            - ~/.npm

  # api
  api_build_and_test:
    docker:
      - image: circleci/node:8.11
      - image: postgres:10-alpine
        environment:
          POSTGRES_USER: circleci
    working_directory: ~/pix/api
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          command: |
            npm run lint
            npm test
      - run:
          command: |
            npm run db:migrate
            npm run db:seed
          environment:
            TEST_DATABASE_URL: "postgres://circleci@localhost:5432/circleci"
            NODE_ENV: "test"

  # mon_pix
  mon_pix_build:
    <<: *mon_pix_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: |
          if [ "${CIRCLE_BRANCH}" == "dev" ]; then
            npx ember build --environment staging
          else
            npx ember build --environment integration
          fi
      - persist_to_workspace:
          root: ~/pix/mon-pix
          paths:
            - dist

  mon_pix_test_1:
    <<: *mon_pix_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - attach_workspace:
          at: ~/pix/mon-pix
      - run: npx ember exam --path dist --split=3 --partition=1 --reporter dot

  mon_pix_test_2:
    <<: *mon_pix_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - attach_workspace:
          at: ~/pix/mon-pix
      - run: npx ember exam --path dist --split=3 --partition=2 --reporter dot

  mon_pix_test_3:
    <<: *mon_pix_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - attach_workspace:
          at: ~/pix/mon-pix
      - run: npx ember exam --path dist --split=3 --partition=3 --reporter dot

  # orga
  orga_build_and_test:
    <<: *orga_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: npm test

  # certif
  certif_build_and_test:
    <<: *certif_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: npm test

  # common ci notification
  signal_ci_ok:
    <<: *common_properties
    steps:
      - restore_cache:
          keys:
            - v6-pix-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: sudo apt-get install -y jq
      - run: npm run ci:signal-jira
      - run: ~/pix/scripts/signal_deploy_to_pr.sh
