# .circleci/config.yml
#
# This file configures the CircleCI 2.0 build.
#
# Documentation:
# - Overview: https://circleci.com/docs/2.0/workflows/
# - Caching: https://circleci.com/docs/2.0/caching/
#
# Things to know:
# - every job is a container
# - cache is used for data that can potentially be reused between builds, provided we can
#   be sure it will not influence the build result other than by speeding it up.
# - cache is immutable. Sometimes we need to flush the cache, but we can't. That's why there is this
#   `v1-` at the beginning. Increment it when you need to change the cache content.
# - because we use `npm ci`, we cache the `~/.npm` directory and not `node_modules` which
#   is erased by `npm ci`.
# - to make sure the cache is indexed by the `package.json` and `package-lock.json` files,
#   we concatenate them into a temporary file whose checksum we use as part of the cache key.
# - for data that is specific to a build (commit), like the source code downloaded from github,
#   we use Circle CI's workspace feature to transport it between jobs.

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.3

executors:
  node-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 16.20.1
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
    resource_class: small
  node-redis-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 16.20.1
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
      - image: postgres:14.8-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:7.0.12-alpine
    resource_class: small
  node-browsers-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 16.20.1
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>-browsers
        environment:
          JOBS: 2
    resource_class: small
  node-browsers-redis-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 16.20.1
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>-browsers
      - image: postgres:14.8-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:7.0.12-alpine
    resource_class: medium+
  node-18-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 18.17.0
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
      - image: postgres:14.8-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
    resource_class: small

workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout:
          context: Pix

      - api_build_and_test:
          context: Pix
          requires:
            - checkout

      - audit_logger_build_and_test:
          context: Pix
          requires:
            - checkout

      - mon_pix_build_and_test:
          context: Pix
          requires:
            - checkout

      - orga_build_and_test:
          context: Pix
          requires:
            - checkout

      - certif_build_and_test:
          context: Pix
          requires:
            - checkout

      - admin_build_and_test:
          context: Pix
          requires:
            - checkout
      - pix1d_build_and_test:
          context: Pix
          requires:
            - checkout

      - e2e_test_app:
          context: Pix
          requires:
            - checkout

      - e2e_test_orga:
          context: Pix
          requires:
            - checkout

      - algo_test:
          context: Pix
          requires:
            - checkout

jobs:
  checkout:
    executor:
      name: node-docker
    working_directory: ~/pix
    steps:
      - checkout
      - run:
          name: Lint and test root
          command: |
            npm ci
            npm run lint:scripts
            npm run lint:yaml
            npm run test:root
            rm -rf .git/
      - persist_to_workspace:
          root: ~/pix
          paths:
            - .

  api_build_and_test:
    executor:
      name: node-redis-postgres-docker
    working_directory: ~/pix/api
    steps:
      - attach_workspace:
          at: ~/pix
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "cachekey" }}
      - run: npm ci --no-optional
      - save_cache:
          key: v7-api-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          name: Lint
          command: npm run lint
          environment:
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci
            TEST_REDIS_URL: redis://localhost:6379
          when: always
      - run:
          name: Test
          command: npm run test
          environment:
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci
            TEST_REDIS_URL: redis://localhost:6379
            MOCHA_FILE: /home/circleci/test-results/test-results.[hash].xml
            MOCHA_REPORTER: mocha-junit-reporter
          when: always
      - store_test_results:
          path: /home/circleci/test-results
      - store_artifacts:
          path: /home/circleci/test-results

  audit_logger_build_and_test:
    executor:
      name: node-18-postgres-docker
    working_directory: ~/pix/audit-logger
    steps:
      - attach_workspace:
          at: ~/pix
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-audit-logger-npm-{{ checksum "cachekey" }}
      - run: npm ci --no-optional
      - save_cache:
          key: v7-audit-logger-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          name: Lint
          command: npm run lint
          environment:
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci
          when: always
      - run:
          name: Test
          command: npm run test
          environment:
            PIX_API_CLIENT_SECRET: $2a$04$vkPRiypzeVQVG92/dCll7.5brjDQZVZc750VwKBc01icXjVIQqRVq
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci
          when: always
      - store_test_results:
          path: /home/circleci/test-results
      - store_artifacts:
          path: /home/circleci/test-results

  mon_pix_build_and_test:
    executor:
      name: node-browsers-docker
    working_directory: ~/pix
    parallelism: 3
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run:
          name: Lint
          command: npm run lint --workspace=mon-pix
      - run:
          name: Test
          command: npm run test:ci --workspace=mon-pix

  orga_build_and_test:
    executor:
      name: node-browsers-docker
    working_directory: ~/pix
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run:
          name: Lint
          command: npm run lint --workspace=orga
      - run:
          name: Test
          command: npm run test:ci --workspace=orga

  pix1d_build_and_test:
    executor:
      name: node-browsers-docker
    working_directory: ~/pix/1d
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-pix1d-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v7-pix1d-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm run test:ci

  certif_build_and_test:
    executor:
      name: node-browsers-docker
    working_directory: ~/pix
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run:
          name: Lint
          command: npm run lint --workspace=certif
      - run:
          name: Test
          command: npm run test:ci --workspace=certif

  admin_build_and_test:
    executor:
      name: node-browsers-docker
    working_directory: ~/pix
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run:
          name: Lint
          command: npm run lint --workspace=admin
      - run:
          name: Test
          command: npm run test:ci --workspace=admin

  e2e_test_app:
    executor:
      name: node-browsers-redis-postgres-docker
    parallelism: 4
    working_directory: ~/pix/high-level-tests/e2e
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-e2e-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v7-e2e-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm

      - run:
          name: Lint
          command: npm run lint

      - run:
          working_directory: ~/pix/api
          command: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "~/pix/api/cachekey" }}
      - run:
          name: Install Pix API
          working_directory: ~/pix/api
          command: npm ci --no-optional

      - run:
          working_directory: ~/pix
          command: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-mon-pix-npm-{{ checksum "~/pix/mon-pix/cachekey" }}
      - run:
          name: Start Pix API
          working_directory: ~/pix/api
          environment:
            DATABASE_URL: 'postgres://circleci@localhost:5432/circleci'
            REDIS_URL: 'redis://localhost:6379'
          background: true
          command: npm start

      - run:
          name: Start Pix App
          working_directory: ~/pix
          environment:
            JOBS: 1
          background: true
          command: npm start --workspace=mon-pix

      - run:
          name: Run tests
          environment:
            DATABASE_URL: 'postgres://circleci@localhost:5432/circleci'
          command: npm run test:ci:app
      - store_test_results:
          path: /home/circleci/test-results

  e2e_test_orga:
    executor:
      name: node-browsers-redis-postgres-docker
    working_directory: ~/pix/high-level-tests/e2e
    steps:
      - browser-tools/install-chrome
      - attach_workspace:
          at: ~/pix
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-e2e-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v7-e2e-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm

      - run:
          name: Lint
          command: npm run lint

      - run:
          working_directory: ~/pix/api
          command: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "~/pix/api/cachekey" }}
      - run:
          name: Install Pix API
          working_directory: ~/pix/api
          command: npm ci --no-optional

      - run:
          working_directory: ~/pix/orga
          command: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-orga-npm-{{ checksum "~/pix/orga/cachekey" }}
      - run:
          name: Start Pix API
          working_directory: ~/pix/api
          environment:
            DATABASE_URL: 'postgres://circleci@localhost:5432/circleci'
            REDIS_URL: 'redis://localhost:6379'
          background: true
          command: npm start

      - run:
          name: Start Pix Orga
          working_directory: ~/pix
          environment:
            JOBS: 2
          background: true
          command: npm start --workspace=orga

      - run:
          name: Run tests
          environment:
            DATABASE_URL: 'postgres://circleci@localhost:5432/circleci'
          command: npm run test:ci:orga
      - store_test_results:
          path: /home/circleci/test-results

  algo_test:
    executor:
      name: node-docker
    parallelism: 1
    working_directory: ~/pix/high-level-tests/test-algo
    steps:
      - attach_workspace:
          at: ~/pix
      - run:
          working_directory: ~/pix/api
          command: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "~/pix/api/cachekey" }}
      - run:
          name: Install Pix API
          working_directory: ~/pix/api
          environment:
            DATABASE_URL: 'postgres://circleci@localhost:5432/circleci'
          command: npm ci --no-optional
      - run:
          command: cat package*.json > cachekey

      - restore_cache:
          keys:
            - v7-test-algo-npm-{{ checksum "~/pix/high-level-tests/test-algo/cachekey" }}
      - run:
          name: Install test algo
          command: npm ci
      - save_cache:
          key: v7-test-algo-npm-{{ checksum "~/pix/high-level-tests/test-algo/cachekey" }}
          paths:
            - ~/.npm

      - run:
          name: Lint
          command: npm run lint

      - run:
          name: Test
          command: npm run test:ci
