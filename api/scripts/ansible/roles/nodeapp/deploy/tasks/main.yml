---
- name: create requirement directory
  become_user: '{{ deploy_user }}'
  file:
    path: "{{ home_app }}"
    state: directory
    mode: 0755

- name: clone code
  become_user: '{{ deploy_user }}'
  git:
    repo: https://github.com/sgmap/pix.git
    dest: "{{ home_app }}"
    depth: 1
    accept_hostkey: yes
    version: "{{ branch }}"
  register: git_res

- name: install package
  become_user: '{{ deploy_user }}'
  command: npm run install:api
  args:
    chdir: "{{ home_app }}"
  when: git_res.changed

- name: set working dir
  set_fact:
    working_directory: "{{ home_app }}/api/"
  when: git_res.changed

- name: stop app
  systemd:
    name: pix-api
    state: stopped
  ignore_errors: yes
  when: git_res.changed

- name: vars file directory
  become_user: '{{ deploy_user }}'
  file:
    path: "{{ home_vars_app }}"
    state: directory
    mode: 0755

- name: vars file
  become_user: '{{ deploy_user }}'
  template:
    dest: "{{ home_vars_app }}"
    src: pix-vars.sh
    mode: 0755
  when: pix_environment is defined

- name: migrate data
  become_user: '{{ deploy_user }}'
  command: "{{ home_vars_app }}/pix-vars.sh npm run db:migrate"
  args:
    chdir: "{{ working_directory }}"
  run_once: yes
  when: git_res.changed

- name: seed data
  become_user: '{{ deploy_user }}'
  command: "{{ home_vars_app }}/pix-vars.sh npm run db:seed"
  args:
    chdir: "{{ working_directory }}"
  run_once: yes
  when: "(git_res.changed) and (need_seed | default(false))"

- name: run test
  become_user: '{{ deploy_user }}'
  command: "{{ home_vars_app }}/pix-vars.sh npm test"
  args:
    chdir: "{{ working_directory }}"
  when: git_res.changed and run_test

- name: set unit file
  template:
    dest: /etc/systemd/system/
    src: pix-api.service
  when: git_res.changed and pix_environment is defined

- name: start app
  systemd:
    daemon_reload: yes
    name: pix-api
    state: restarted
    enabled: yes
  when: git_res.changed
