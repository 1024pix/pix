{
  "name": "pix-api",
  "version": "2.99.0",
  "private": false,
  "description": "Plateforme d'évaluation et de certification des compétences numériques à l'usage de tous les citoyens francophones",
  "license": "AGPL-3.0",
  "author": "GIP Pix",
  "engines": {
    "node": "10.15.3"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/1024pix/pix.git"
  },
  "directories": {
    "doc": "docs",
    "test": "tests"
  },
  "main": "server.js",
  "homepage": "https://github.com/1024pix/pix#readme",
  "dependencies": {
    "@hapi/hapi": "^18.4.0",
    "@hapi/inert": "^5.2.2",
    "@hapi/joi": "^16.1.8",
    "@hapi/joi-date": "^2.0.1",
    "@hapi/vision": "^5.5.4",
    "airtable": "^0.8.0",
    "bcrypt": "^3.0.7",
    "blipp": "^4.0.1",
    "bluebird": "^3.7.1",
    "bookshelf": "^0.15.1",
    "bookshelf-page": "^0.3.2",
    "bookshelf-validate": "^2.0.3",
    "boom": "^7.3.0",
    "bunyan": "^1.8.12",
    "catbox": "^10.0.6",
    "catbox-memory": "^4.0.1",
    "dezalgo": "^1.0.3",
    "dotenv": "^8.2.0",
    "faker": "^4.1.0",
    "fast-levenshtein": "^2.0.6",
    "good": "^8.1.2",
    "good-console": "^8.0.0",
    "good-squeeze": "^5.1.0",
    "hapi-sentry": "^2.1.0",
    "hapi-swagger": "^11.0.0",
    "hash-int": "^1.0.0",
    "heap-profile": "^0.4.0",
    "heapdump": "^0.3.15",
    "json2csv": "^4.5.4",
    "jsonapi-serializer": "^3.6.5",
    "jsonwebtoken": "^8.5.1",
    "jszip": "3.2.2",
    "knex": "^0.20.2",
    "lodash": "^4.17.15",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.27",
    "node-cache": "^5.0.2",
    "node-cron": "^2.0.3",
    "node-mailjet": "^3.3.1",
    "papaparse": "^5.1.0",
    "path": "^0.12.7",
    "pg": "^7.14.0",
    "prom-client": "^11.5.3",
    "randomstring": "^1.1.5",
    "redis": "^2.8.0",
    "redlock": "^3.1.2",
    "request": "^2.88.0",
    "request-promise-native": "^1.0.8",
    "samlify": "github:1024pix/samlify#no-xml-validation",
    "xlsx": "^0.15.3",
    "xml-buffer-tostring": "^0.2.0",
    "xml-crypto": "~1.0.2",
    "xmldom": "0.1.27",
    "xregexp": "^4.2.4",
    "yamljs": "^0.3.0"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-sorted": "^0.2.0",
    "eslint": "^6.7.1",
    "eslint-plugin-mocha": "^6.2.2",
    "iconv-lite": "^0.5.0",
    "mocha": "^6.2.2",
    "nock": "^11.7.0",
    "nodemon": "^2.0.1",
    "nyc": "^14.1.1",
    "sinon": "^7.5.0",
    "sinon-chai": "^3.3.0",
    "stream-to-promise": "^2.2.0"
  },
  "scripts": {
    "clean": "rm -rf node_modules db/*.sqlite3",
    "coverage:check": "NODE_ENV=test npm run db:migrate && NODE_ENV=test nyc --silent _mocha --recursive --exit --reporter dot tests && nyc report --reporter=lcovonly --report-dir=../coverage",
    "coverage:rename": "mv ../coverage/lcov.info ../coverage/api_lcov.info",
    "coverage": "npm run coverage:check && npm run coverage:rename",
    "db:new-migration": "npx knex --knexfile db/knexfile.js migrate:make $migrationname",
    "db:create": "node scripts/database/create-database",
    "db:delete": "node scripts/database/drop-database",
    "db:empty": "node scripts/database/empty-database",
    "db:migrate": "knex --knexfile db/knexfile.js migrate:latest",
    "db:prepare": "npm run db:delete && npm run db:create && npm run db:migrate",
    "db:seed": "knex --knexfile db/knexfile.js seed:run",
    "db:reset": "npm run db:prepare && npm run db:seed",
    "lint": "eslint lib tests",
    "lint:fix": "eslint lib tests --fix",
    "preinstall": "test \"$(npm --version)\" = 6.4.1",
    "scalingo-background-job": "node scripts/reload-cache-everyday.js",
    "scalingo-postbuild": "echo 'nothing to do'",
    "scalingo-post-ra-creation": "npm run db:seed",
    "start": "node bin/www",
    "start:watch": "nodemon --signal SIGTERM bin/www",
    "test": "NODE_ENV=test npm run db:prepare && npm run test:api",
    "test:api": "NODE_ENV=test mocha --recursive --exit --reporter dot tests",
    "test:api:unit": "env NODE_ENV=test mocha --recursive --exit --reporter dot tests/unit",
    "test:api:debug": "NODE_ENV=test mocha --inspect-brk=9229 --recursive --exit --reporter dot tests",
    "test:api:watch": "NODE_ENV=test mocha --recursive tests --watch --reporter dot",
    "test:scripts": "NODE_ENV=test mocha --recursive --reporter dot ./tests/unit/scripts",
    "test:lint": "npm test && npm run lint"
  }
}
