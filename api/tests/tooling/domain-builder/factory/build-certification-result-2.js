const CertificationResult = require('../../../../lib/domain/models/CertificationResult');
const buildCleaCertificationResult = require('./build-clea-certification-result');
const buildPixPlusDroitCertificationResult = require('./build-pix-plus-droit-certification-result');

module.exports = function buildCertificationResult({
  id = 123,
  firstName = 'Malik',
  lastName = 'Wayne',
  birthplace = 'Perpignan',
  birthdate = '2000-08-30',
  externalId = 'externalId',
  createdAt = new Date('2020-01-01'),
  completedAt = new Date('2020-05-05'),
  isPublished = true,
  isV2Certification = true,
  hasSeenEndTestScreen = true,
  cleaCertificationResult = buildCleaCertificationResult.notTaken(),
  pixPlusDroitMaitreCertificationResult = buildPixPlusDroitCertificationResult.maitre.notTaken(),
  pixPlusDroitExpertCertificationResult = buildPixPlusDroitCertificationResult.expert.notTaken(),
  certificationIssueReports = [],
  assessmentId = 456,
  sessionId = 789,
  status = CertificationResult.status.REJECTED,
  resultCreatedAt = new Date('2020-06-06'),
  pixScore = 0,
  emitter = 'MOI',
  commentForCandidate = 'comment candidate',
  commentForJury = 'comment jury',
  commentForOrganization = 'comment organization',
  competencesWithMark = [],
  juryId = 159,
} = {}) {
  const certificationResult = new CertificationResult();
  certificationResult.id = id;
  certificationResult.firstName = firstName;
  certificationResult.lastName = lastName;
  certificationResult.birthplace = birthplace;
  certificationResult.birthdate = birthdate;
  certificationResult.externalId = externalId;
  certificationResult.createdAt = createdAt;
  certificationResult.completedAt = completedAt;
  certificationResult.isPublished = isPublished;
  certificationResult.isV2Certification = isV2Certification;
  certificationResult.cleaCertificationResult = cleaCertificationResult;
  certificationResult.pixPlusDroitMaitreCertificationResult = pixPlusDroitMaitreCertificationResult;
  certificationResult.pixPlusDroitExpertCertificationResult = pixPlusDroitExpertCertificationResult;
  certificationResult.certificationIssueReports = certificationIssueReports;
  certificationResult.hasSeenEndTestScreen = hasSeenEndTestScreen;
  certificationResult.assessmentId = assessmentId;
  certificationResult.sessionId = sessionId;
  certificationResult.status = status;
  certificationResult.resultCreatedAt = resultCreatedAt;
  certificationResult.pixScore = pixScore;
  certificationResult.emitter = emitter;
  certificationResult.commentForCandidate = commentForCandidate;
  certificationResult.commentForJury = commentForJury;
  certificationResult.commentForOrganization = commentForOrganization;
  certificationResult.competencesWithMark = competencesWithMark;
  certificationResult.juryId = juryId;
  return certificationResult;
};
