<ImportInformationBanner @importDetail={{@importDetail}} />

<div id={{this.filtersId}} />

<div class="panel">
  <table class="table content-text content-text--small">
    <caption class="screen-reader-only">{{t "pages.sup-organization-participants.table.description"}}</caption>
    <thead id={{this.headerId}} />
    <tbody>
      <SelectableList @items={{@students}}>
        <:manager as |allSelected someSelected toggleAll selectedStudents reset|>
          <InElement @destinationId={{this.headerId}}>
            <SupOrganizationParticipant::TableHeaders
              @allSelected={{allSelected}}
              @someSelected={{someSelected}}
              @showCheckbox={{this.showCheckbox}}
              @lastnameSort={{@lastnameSort}}
              @hasStudents={{this.hasStudents}}
              @participationCountOrder={{@participationCountOrder}}
              @onToggleAll={{toggleAll}}
              @sortByLastname={{fn this.addResetOnFunction @sortByLastname reset}}
              @sortByParticipationCount={{fn this.addResetOnFunction @sortByParticipationCount reset}}
              @hasComputeOrganizationLearnerCertificabilityEnabled={{@hasComputeOrganizationLearnerCertificabilityEnabled}}
            />
          </InElement>
          {{#if someSelected}}
            <InElement @destinationId={{this.actionBarId}}>
              <SupOrganizationParticipant::ActionBar
                @count={{selectedStudents.length}}
                @openDeletionModal={{this.openDeletionModal}}
              />
              <Ui::DeletionModal
                @title={{t
                  "pages.sup-organization-participants.deletion-modal.title"
                  count=selectedStudents.length
                  firstname=(get selectedStudents "0.firstName")
                  lastname=(get selectedStudents "0.lastName")
                  htmlSafe=true
                }}
                @showModal={{this.showDeletionModal}}
                @count={{selectedStudents.length}}
                @onTriggerAction={{fn this.deleteStudents selectedStudents reset}}
                @onCloseModal={{this.closeDeletionModal}}
              >
                <:content>
                  <p>{{t
                      "pages.sup-organization-participants.deletion-modal.content.header"
                      count=selectedStudents.length
                    }}</p>
                  <p>{{t
                      "pages.sup-organization-participants.deletion-modal.content.main-participation-prevent"
                      count=selectedStudents.length
                    }}</p>
                  <p>{{t
                      "pages.sup-organization-participants.deletion-modal.content.main-campaign-prevent"
                      count=selectedStudents.length
                    }}</p>
                  <p>{{t
                      "pages.sup-organization-participants.deletion-modal.content.main-participation-access"
                      count=selectedStudents.length
                    }}</p>
                  <p>{{t
                      "pages.sup-organization-participants.deletion-modal.content.main-new-campaign-access"
                      count=selectedStudents.length
                    }}</p>
                  <p><strong>{{t
                        "pages.sup-organization-participants.deletion-modal.content.footer"
                        count=selectedStudents.length
                      }}</strong></p>
                </:content>
              </Ui::DeletionModal>
            </InElement>
          {{/if}}
          <InElement @destinationId={{this.paginationId}} @waitForElement={{true}}>
            <Table::PaginationControl @pagination={{@students.meta}} @onChange={{reset}} />
          </InElement>
          <InElement @destinationId={{this.filtersId}}>
            <SupOrganizationParticipant::SupLearnerFilters
              @studentsCount={{@students.meta.rowCount}}
              @onFilter={{fn this.addResetOnFunction @onFilter reset}}
              @searchFilter={{@searchFilter}}
              @studentNumberFilter={{@studentNumberFilter}}
              @certificabilityFilter={{@certificabilityFilter}}
              @groupsFilter={{@groupsFilter}}
              @onResetFilter={{fn this.addResetOnFunction @onResetFilter reset}}
              @groupsOptions={{this.groups}}
              @isLoadingGroups={{this.isLoadingGroups}}
            />
          </InElement>
        </:manager>
        <:item as |student toggleStudent isStudentSelected|>
          <SupOrganizationParticipant::TableRow
            @showCheckbox={{this.showCheckbox}}
            @student={{student}}
            @isStudentSelected={{isStudentSelected}}
            @onClickLearner={{fn @onClickLearner student.id}}
            @openEditStudentNumberModal={{this.openEditStudentNumberModal}}
            @isAdminInOrganization={{this.currentUser.isAdminInOrganization}}
            @onToggleStudent={{fn this.addStopPropagationOnFunction toggleStudent}}
            @hideCertifiableDate={{@hasComputeOrganizationLearnerCertificabilityEnabled}}
          />
        </:item>
      </SelectableList>
    </tbody>
  </table>

  {{#if (eq @students.meta.participantCount 0)}}
    <Ui::EmptyState
      @infoText={{t "pages.sup-organization-participants.empty-state.no-participants"}}
      @actionText={{t "pages.sup-organization-participants.empty-state.no-participants-action"}}
    />
  {{else if (not @students)}}
    <div class="table__empty content-text">
      {{t "pages.sup-organization-participants.table.empty"}}
    </div>
  {{/if}}
</div>

<SupOrganizationParticipant::Modal::EditStudentNumberModal
  @student={{this.selectedStudent}}
  @display={{this.isShowingEditStudentNumberModal}}
  @onClose={{this.closeEditStudentNumberModal}}
  @onSubmit={{this.onSaveStudentNumber}}
/>

<div id={{this.actionBarId}} />
<div id={{this.paginationId}} />