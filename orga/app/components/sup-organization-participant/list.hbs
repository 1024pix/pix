<div id={{this.filtersId}} />

<div class="panel">
  <table class="table content-text content-text--small">
    <caption class="screen-reader-only">{{t "pages.sup-organization-participants.table.description"}}</caption>
    <thead id={{this.headerId}} />
    <tbody>
      <SelectableList @items={{@students}}>
        <:manager as |allSelected someSelected toggleAll selectedStudents reset|>
          <InElement @destinationId={{this.headerId}}>
            <SupOrganizationParticipant::TableHeaders
              @allSelected={{allSelected}}
              @someSelected={{someSelected}}
              @showCheckbox={{this.showCheckbox}}
              @lastnameSort={{@lastnameSort}}
              @hasStudents={{this.hasStudents}}
              @participationCountOrder={{@participationCountOrder}}
              @onToggleAll={{toggleAll}}
              @sortByLastname={{(fn this.addResetOnFunction @sortByLastname reset)}}
              @sortByParticipationCount={{(fn this.addResetOnFunction @sortByParticipationCount reset)}}
            />
          </InElement>
          {{#if someSelected}}
            <InElement @destinationId={{this.actionBarId}}>
              <SupOrganizationParticipant::ActionBar
                @count={{selectedStudents.length}}
                @openDeletionModal={{this.openDeletionModal}}
              />
              <SupOrganizationParticipant::Modal::Deletion
                @showModal={{this.showDeletionModal}}
                @itemsToDelete={{selectedStudents}}
                @onTriggerAction={{(fn this.deleteStudents selectedStudents reset)}}
                @onCloseModal={{this.closeDeletionModal}}
              />
            </InElement>
          {{/if}}
          <InElement @destinationId={{this.paginationId}} @waitForElement={{true}}>
            <Table::PaginationControl @pagination={{@students.meta}} @onChange={{reset}} />
          </InElement>
          <InElement @destinationId={{this.filtersId}}>
            <SupOrganizationParticipant::SupLearnerFilters
              @studentsCount={{@students.meta.rowCount}}
              @onFilter={{(fn this.addResetOnFunction @onFilter reset)}}
              @searchFilter={{@searchFilter}}
              @studentNumberFilter={{@studentNumberFilter}}
              @certificabilityFilter={{@certificabilityFilter}}
              @groupsFilter={{@groupsFilter}}
              @onResetFilter={{(fn this.addResetOnFunction @onResetFilter reset)}}
              @groupsOptions={{this.groups}}
              @isLoadingGroups={{this.isLoadingGroups}}
            />
          </InElement>
        </:manager>
        <:item as |student toggleStudent isStudentSelected|>
          <SupOrganizationParticipant::TableRow
            @showCheckbox={{this.showCheckbox}}
            @student={{student}}
            @isStudentSelected={{isStudentSelected}}
            @onClickLearner={{(fn @onClickLearner student.id)}}
            @openEditStudentNumberModal={{this.openEditStudentNumberModal}}
            @isAdminInOrganization={{this.currentUser.isAdminInOrganization}}
            @onToggleStudent={{(fn this.addStopPropagationOnFunction toggleStudent)}}
          />
        </:item>
      </SelectableList>
    </tbody>
  </table>

  {{#if (eq @students.meta.participantCount 0)}}
    <Ui::EmptyState
      @infoText={{t "pages.sup-organization-participants.empty-state.no-participants"}}
      @actionText={{t "pages.sup-organization-participants.empty-state.no-participants-action"}}
    />
  {{else if (not @students)}}
    <div class="table__empty content-text">
      {{t "pages.sup-organization-participants.table.empty"}}
    </div>
  {{/if}}
</div>

<SupOrganizationParticipant::Modal::EditStudentNumberModal
  @student={{this.selectedStudent}}
  @display={{this.isShowingEditStudentNumberModal}}
  @onClose={{this.closeEditStudentNumberModal}}
  @onSubmit={{this.onSaveStudentNumber}}
/>

<div id={{this.actionBarId}} />
<div id={{this.paginationId}} />